import ru.pocketbyte.locolaser.gettext.GetTextResourcesConfig
import ru.pocketbyte.locolaser.google.GoogleSheetResourcesConfig
import ru.pocketbyte.locolaser.ini.IniResourcesConfig
import ru.pocketbyte.locolaser.json.JsonResourcesConfig
import ru.pocketbyte.locolaser.kotlinmpp.KotlinMultiplatformResourcesConfigBuilder
import ru.pocketbyte.locolaser.mobile.AndroidResourcesConfig
import ru.pocketbyte.locolaser.mobile.IosResourcesConfig
import ru.pocketbyte.locolaser.properties.PropertiesResourcesConfig
import ru.pocketbyte.locolaser.resource.formatting.JavaFormattingType

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        def locolaserVersion = "2.3.0"
        classpath "ru.pocketbyte.locolaser:plugin:$locolaserVersion"
        classpath "ru.pocketbyte.locolaser:core:$locolaserVersion"
        classpath "ru.pocketbyte.locolaser:resource-gettext:$locolaserVersion"
        classpath "ru.pocketbyte.locolaser:resource-googlesheet:$locolaserVersion"
        classpath "ru.pocketbyte.locolaser:resource-ini:$locolaserVersion"
        classpath "ru.pocketbyte.locolaser:resource-json:$locolaserVersion"
        classpath "ru.pocketbyte.locolaser:resource-kotlin-mpp:$locolaserVersion"
        classpath "ru.pocketbyte.locolaser:resource-mobile:$locolaserVersion"
        classpath "ru.pocketbyte.locolaser:resource-properties:$locolaserVersion"
    }
}

apply plugin: "ru.pocketbyte.locolaser"

version = "unspecified"

localize {
    configFromFile("JsonConfig", "../config.json")

    config {
        platform {
            add(new KotlinMultiplatformResourcesConfigBuilder()) {
                srcDir = "./build/res/kmpp/"
                repositoryInterface = "com.example.SuperString"
                repositoryClass = "com.example.SuperStringImpl"
                android(); ios(); js()
                absStatic("static") {
                    formattingType = JavaFormattingType.INSTANCE
                }
                absKeyValue("keyValue") {
                    formattingType = JavaFormattingType.INSTANCE
                }
                absProxy("proxy") {}
            }
            add(JsonResourcesConfig.@Companion) {
                resourcesDir = "./build/res/json"
                indent = 2
            }
            add(GetTextResourcesConfig.@Companion) {
                resourcesDir = "./build/res/gettext"
            }
            add(IniResourcesConfig.@Companion) {
                resourcesDir = "./build/res/ini"
            }
            add(PropertiesResourcesConfig.@Companion) {
                resourcesDir = "./build/res/properties"
            }
            add(AndroidResourcesConfig.@Companion) {
                resourcesDir = "./build/res/android"
            }
            add(IosResourcesConfig.@Companion) {
                resourcesDir = "./build/res/ios"
            }
        }
        source {
            add(GoogleSheetResourcesConfig.@Companion) {
                id = "1JZxUcu30BjxLwHg12bdHTxjDgsGFX9HA9zC4Jd8cuUM"
                keyColumn = "key"
                commentColumn = "base"
                quantityColumn = "quantity"
                credentialFile = "../service_account.json"
            }
        }
        duplicateComments = false
        locales = ["base", "ru"]
    }
}
